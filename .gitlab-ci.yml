image: golang:latest

cache:
  paths:
    - /apt-cache
    - /go/src/github.com
    - /go/src/golang.org
    - /go/src/google.golang.org
    - /go/src/gopkg.in

stages:
  - test
  # - build

before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)
  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  # - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "$SSH_PRIVATE_KEY" | ssh-add - > /dev/null
  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - git config --global user.email "git@gitlab.dusk.network"
  - git config --global user.name "Gitlab Runner"
  - git config --global url."git@gitlab.dusk.network:".insteadOf "https://gitlab.dusk.network/"
   
  - mkdir -p /go/src/gitlab.dusk.network/dusk-core/dusk-go /go/src/_/builds
  - cp -r $CI_PROJECT_DIR /go/src/gitlab.dusk.network/dusk-core/dusk-go
 # - ln -s /go/src/gitlab.dusk.network/dusk-core/dusk-go/builds /go/src/_/builds/dusk-go
  - make dep

unit_tests:
  stage: test
  script:
    - make test

race_detector:
  stage: test
  script:
    - make race
lint_code:
  stage: test
  script:
    - make lint

# build:
#   stage: build
#   script:
#     - make
#   artifacts:
#     paths:
#     - demo-tools
